<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.5</version>
        <!-- 版本对应： https://start.spring.io/actuator/info -->
    </parent>

    <groupId>com.linyilinyi</groupId>
    <artifactId>linyilinyi</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <modules>
        <module>common</module>
        <module>service</module>
        <module>model</module>
        <module>gateway</module>
        <module>service-client</module>
        <module>operLog</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <cloud.version>2022.0.2</cloud.version>
        <alibaba.version>2022.0.0.0-RC2</alibaba.version>
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <mysql.version>8.0.30</mysql.version>
        <knife4j.version>4.3.0</knife4j.version>
        <fastjson.version>2.0.41</fastjson.version>
        <vod_api.version>2.1.4</vod_api.version>
        <minio.version>8.5.2</minio.version>
        <jodatime.version>2.10.1</jodatime.version>
        <xxl-job.version>2.3.0</xxl-job.version>
        <wxpay.version>0.2.11</wxpay.version>
        <weixin.miniapp.version>4.5.5.B</weixin.miniapp.version>
        <tencentcloud.version>3.1.322</tencentcloud.version>
        <cos_api.version>5.6.155</cos_api.version>
        <redisson.version>3.23.3</redisson.version>
        <commons-io.version>2.11.0</commons-io.version>
        <!-- https://seata.io/zh-cn/docs/overview/what-is-seata.html -->
        <seata.version>2.0.0</seata.version>
        <drools.version>8.41.0.Final</drools.version>
        <websocket.version>3.2.5</websocket.version>
        <security.version>3.2.3</security.version>
        <web.version>3.0.5</web.version>
        <gson.version>2.10.1</gson.version>
        <hutool-all.version>5.8.27</hutool-all.version>
        <elasticsearch.version>7.6.0</elasticsearch.version>
        <elasticsearch-rest-high-level-client.version>7.6.0</elasticsearch-rest-high-level-client.version>
        <elasticsearch-rest-client.version>7.6.0</elasticsearch-rest-client.version>
        <spring-boot-starter-data-elasticsearch.version>3.0.5</spring-boot-starter-data-elasticsearch.version>
        <amqp.version>4.1.0</amqp.version>
        <aggregation.version>4.3.0</aggregation.version>
        <spring-boot-starter-webflux>3.3.0</spring-boot-starter-webflux>
        <knife4j.gateway.versiom>4.3.0</knife4j.gateway.versiom>
        <springdoc-openapi-starter-common>2.3.0</springdoc-openapi-starter-common>
        <spring-boot-starter-cache>3.2.0</spring-boot-starter-cache>
        <jackson-datatype-jsr310>2.13.0</jackson-datatype-jsr310>
        <spring-cloud-starter-oauth2>2.2.5.RELEASE</spring-cloud-starter-oauth2>
        <jjwt.version>0.12.5</jjwt.version>
        <javax.servlet-api>4.0.1</javax.servlet-api>
        <java-jwt.version>4.0.0</java-jwt.version>
        <jedis.version>5.1.0</jedis.version>
        <sa-token-redis>1.39.0</sa-token-redis>
        <sa-token-spring-boot3-starter>1.39.0</sa-token-spring-boot3-starter>
        <sa-token-reactor-spring-boot3-starter>1.39.0</sa-token-reactor-spring-boot3-starter>
        <httpclient.version>4.5.13</httpclient.version>
        <ip2region.version>2.6.5</ip2region.version>
    </properties>

    <!--配置dependencyManagement锁定依赖的版本-->
    <dependencyManagement>
        <dependencies>
           <!-- ip2region获取ip归属地-->
                <dependency>
                    <groupId>org.lionsoul</groupId>
                    <artifactId>ip2region</artifactId>
                    <version>${ip2region.version}</version>
                </dependency>

            <!-- httpClient依赖,缺少此依赖api网关转发请求时可能发生503错误 -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--getaway中 Sa-Token 权限认证（Reactor响应式集成 -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-reactor-spring-boot3-starter</artifactId>
                <version>${sa-token-reactor-spring-boot3-starter}</version>
            </dependency>
            <!-- jedis-->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <!-- Sa-Token 整合 Redis （使用 jdk 默认序列化方式） -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-redis</artifactId>
                <version>${sa-token-redis}</version>
            </dependency>
            <!-- Sa-Token 权限认证，在线文档：https://sa-token.cc -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot3-starter</artifactId>
                <version>${sa-token-spring-boot3-starter}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>4.0.1</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-oauth2</artifactId>
                <version>${spring-cloud-starter-oauth2}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson-datatype-jsr310}</version> <!-- 确保使用与你当前使用的 Jackson 版本相匹配的版本 -->
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring-boot-starter-cache}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-common</artifactId>
                <version>${springdoc-openapi-starter-common}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot-starter-webflux}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
                <version>${knife4j.gateway.versiom}</version>
            </dependency>
            <!--amqp-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bus-amqp</artifactId>
                <version>${amqp.version}</version>
            </dependency>
            <!--hutool-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <!-- Spring Boot Starter for Elasticsearch -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot-starter-data-elasticsearch.version}</version>
            </dependency>

            <!-- Elasticsearch REST client (low-level) -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch-rest-client.version}</version>
            </dependency>

            <!-- Elasticsearch REST high-level client -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch-rest-high-level-client.version}</version>
            </dependency>

            <!-- Elasticsearch core library -->
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>7.6.0</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!--Spring Cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Cloud Alibaba -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mybatis-plus 持久层-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--knife4j https://doc.xiaominfo.com/docs/quick-start-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- minio -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!--日期时间工具-->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${jodatime.version}</version>
            </dependency>

            <!-- xxl-job -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>

            <!--微信支付-->
            <dependency>
                <groupId>com.github.wechatpay-apiv3</groupId>
                <artifactId>wechatpay-java</artifactId>
                <version>${wxpay.version}</version>
            </dependency>

            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!--BinaryWang 的微信 SDK 依赖-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>${weixin.miniapp.version}</version>
            </dependency>

            <!--腾讯云 SDK 依赖-->
            <dependency>
                <groupId>com.tencentcloudapi</groupId>
                <artifactId>tencentcloud-sdk-java</artifactId>
                <version>${tencentcloud.version}</version>
            </dependency>
            <!--腾讯云 SDK 依赖-->
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api</artifactId>
                <version>${cos_api.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <!-- drools lib -->
            <!-- 添加 Drools 核心依赖 -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-core</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <!-- 可选：Drools 编译器 -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-compiler</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <!-- 可选：Drools 决策表支持 -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-decisiontables</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <!-- 添加 Drools MVEL 依赖 -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-mvel</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <!--websocket-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-websocket</artifactId>
                <version>${websocket.version}</version>
            </dependency>
            <!-- Spring Boot Web Starter 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${web.version}</version>
            </dependency>
            <!--springboot-security-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${security.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>